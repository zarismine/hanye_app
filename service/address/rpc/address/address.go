// Code generated by goctl. DO NOT EDIT.
// Source: address.proto

package address

import (
	"context"

	"hanye/service/address/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddAddressReq         = pb.AddAddressReq
	AddAddressResp        = pb.AddAddressResp
	Address               = pb.Address
	DeleteAddressReq      = pb.DeleteAddressReq
	DeleteAddressResp     = pb.DeleteAddressResp
	GetAddressListReq     = pb.GetAddressListReq
	GetAddressListResp    = pb.GetAddressListResp
	GetAddressReq         = pb.GetAddressReq
	GetAddressResp        = pb.GetAddressResp
	GetDefaultAddressReq  = pb.GetDefaultAddressReq
	GetDefaultAddressResp = pb.GetDefaultAddressResp
	SetDefaultAddressReq  = pb.SetDefaultAddressReq
	SetDefaultAddressResp = pb.SetDefaultAddressResp
	UpdateAddressReq      = pb.UpdateAddressReq
	UpdateAddressResp     = pb.UpdateAddressResp

	AddressZrpcClient interface {
		AddAddress(ctx context.Context, in *AddAddressReq, opts ...grpc.CallOption) (*AddAddressResp, error)
		GetAddressList(ctx context.Context, in *GetAddressListReq, opts ...grpc.CallOption) (*GetAddressListResp, error)
		GetAddress(ctx context.Context, in *GetAddressReq, opts ...grpc.CallOption) (*GetAddressResp, error)
		GetDefaultAddress(ctx context.Context, in *GetDefaultAddressReq, opts ...grpc.CallOption) (*GetDefaultAddressResp, error)
		UpdateAddress(ctx context.Context, in *UpdateAddressReq, opts ...grpc.CallOption) (*UpdateAddressResp, error)
		SetDefaultAddress(ctx context.Context, in *SetDefaultAddressReq, opts ...grpc.CallOption) (*SetDefaultAddressResp, error)
		DeleteAddress(ctx context.Context, in *DeleteAddressReq, opts ...grpc.CallOption) (*DeleteAddressResp, error)
	}

	defaultAddressZrpcClient struct {
		cli zrpc.Client
	}
)

func NewAddressZrpcClient(cli zrpc.Client) AddressZrpcClient {
	return &defaultAddressZrpcClient{
		cli: cli,
	}
}

func (m *defaultAddressZrpcClient) AddAddress(ctx context.Context, in *AddAddressReq, opts ...grpc.CallOption) (*AddAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.AddAddress(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) GetAddressList(ctx context.Context, in *GetAddressListReq, opts ...grpc.CallOption) (*GetAddressListResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.GetAddressList(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) GetAddress(ctx context.Context, in *GetAddressReq, opts ...grpc.CallOption) (*GetAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.GetAddress(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) GetDefaultAddress(ctx context.Context, in *GetDefaultAddressReq, opts ...grpc.CallOption) (*GetDefaultAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.GetDefaultAddress(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) UpdateAddress(ctx context.Context, in *UpdateAddressReq, opts ...grpc.CallOption) (*UpdateAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.UpdateAddress(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) SetDefaultAddress(ctx context.Context, in *SetDefaultAddressReq, opts ...grpc.CallOption) (*SetDefaultAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.SetDefaultAddress(ctx, in, opts...)
}

func (m *defaultAddressZrpcClient) DeleteAddress(ctx context.Context, in *DeleteAddressReq, opts ...grpc.CallOption) (*DeleteAddressResp, error) {
	client := pb.NewAddressClient(m.cli.Conn())
	return client.DeleteAddress(ctx, in, opts...)
}
